name: CMake Build project

on:
  pull_request:
    branches:
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "Windows MSVC", artifact: "windows-msvc.tar.xz", os: windows-latest, cc: "cl", cxx: "cl" }
          - { name: "Ubuntu gcc", artifact: "linux-gcc.tar.xz", os: ubuntu-latest, cc: "gcc", cxx: "g++" }
          - { name: "MacOS clang", artifact: "macos-clang.tar.xz", os: macos-latest, cc: "clang", cxx: "clang++" }

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Setup ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Set Windows ENV
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt install gobjc++

#    - name: Install Macos Dependencies
#      if: runner.os == 'macOS'
#      run: sudo apt install libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libglew-dev

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake .. -G Ninja $GITHUB_WORKSPACE -DCMAKE_C_COMPILER=${{ matrix.config.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
